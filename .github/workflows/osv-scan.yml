name: OSV Scanner

on:
  pull_request:
    paths:
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'src/**'
      - '.github/workflows/osv-scan.yml'
  push:
    branches: [ main ]
    paths:
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'src/**'
      - '.github/workflows/osv-scan.yml'

permissions:
  contents: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  osv:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 1

      - name: Prepare lockfile
        uses: dtolnay/rust-toolchain@stable

      - name: Fetch dependencies
        run: cargo fetch --locked

      - name: Run OSV-Scanner (Docker, pinned digest)
        shell: bash
        continue-on-error: true
        run: |
          set -euo pipefail
          IMAGE="ghcr.io/google/osv-scanner:latest"
          docker pull "$IMAGE" > /dev/null
          DIGEST="$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE")"
          echo "Using image digest: $DIGEST"
          docker run --rm \
            -v "${{ github.workspace }}":/src \
            -w /src \
            "$DIGEST" \
            --config .github/osv-scanner-config.yaml \
            --lockfile Cargo.lock \
            --recursive \
            --format sarif \
            --output osv-results.sarif

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        with:
          sarif_file: osv-results.sarif
