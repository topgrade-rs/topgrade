on:
  pull_request:
  push:
    branches:
      - main

name: CI

env:
  CROSS_VER: '0.2.5'
  CARGO_NET_RETRY: 3

permissions:
  contents: read

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run cargo fmt
        env:
          TERM: xterm-256color
        run: |
          cargo fmt --all -- --check

  step-enum-sorted:
    name: Step enum sorted
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check if `Step` enum is sorted
        run: |
          ENUM_NAME="Step"
          FILE="src/config.rs"
          awk "/enum $ENUM_NAME/,/}/" "$FILE" | \
          grep -E '^\s*[A-Za-z_][A-Za-z0-9_]*\s*,?$' | \
          sed 's/[, ]//g' > original.txt
          sort original.txt > sorted.txt
          diff original.txt sorted.txt

  main:
    needs: [fmt, step-enum-sorted]
    name: ${{ matrix.target_name }} (check, clippy)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-linux-android
            target_name: Android
            use_cross: true
            os: ubuntu-latest

          - target: x86_64-unknown-freebsd
            target_name: FreeBSD
            use_cross: true
            os: ubuntu-latest

          - target: x86_64-unknown-linux-gnu
            target_name: Linux
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            target_name: macOS-x86_64
            os: macos-13

          - target: aarch64-apple-darwin
            target_name: macOS-aarch64
            os: macos-latest

          - target: x86_64-unknown-netbsd
            target_name: NetBSD
            use_cross: true
            os: ubuntu-latest

          - target: x86_64-pc-windows-msvc
            target_name: Windows
            os: windows-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: ${{ matrix.target }}

      - name: Setup cross
        if: matrix.use_cross == true
        run: curl -fL --retry 3 https://github.com/cross-rs/cross/releases/download/v${{ env.CROSS_VER }}/cross-x86_64-unknown-linux-musl.tar.gz | tar vxz -C /usr/local/bin

      - name: Run cargo/cross check
        run: ${{ matrix.use_cross == true && 'cross' || 'cargo' }} check --locked --target ${{ matrix.target }}

      - name: Run cargo/cross clippy
        run: ${{ matrix.use_cross == true && 'cross' || 'cargo' }} clippy --locked --target ${{ matrix.target }} --all-features -- -D warnings

      - name: Run cargo test
        # ONLY run test with cargo
        if: matrix.use_cross == false
        run: cargo test --locked --target ${{ matrix.target }}
