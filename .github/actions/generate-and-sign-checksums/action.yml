name: generate-and-sign-checksums
description: Generate SHA256SUMS for files in a directory and sign it with Cosign
inputs:
  dir:
    description: Directory containing files to checksum
    required: true
runs:
  using: composite
  steps:
    - name: Generate checksum manifest (SHA256SUMS)
      shell: bash
      run: |
        set -euo pipefail
        cd "${{ inputs.dir }}"
        : > SHA256SUMS
        for f in *; do
          [ -f "$f" ] || continue
          case "$f" in
            *.sig|*.crt|SHA256SUMS|SHA256SUMS.sig|SHA256SUMS.crt) continue;;
          esac
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum "$f" >> SHA256SUMS
          else
            shasum -a 256 "$f" >> SHA256SUMS
          fi
        done
        echo "Generated SHA256SUMS:" && cat SHA256SUMS
    - name: Sign checksum manifest with Cosign
      uses: sigstore/cosign-installer@v3
    - name: Cosign sign manifest
      shell: bash
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: |
        set -euo pipefail
        cosign sign-blob --yes "${{ inputs.dir }}/SHA256SUMS" \
          --output-signature "${{ inputs.dir }}/SHA256SUMS.sig" \
          --output-certificate "${{ inputs.dir }}/SHA256SUMS.crt"
