_version: 2
  
"Current system locale is {system_locale}":
  en: "Current system locale is %{system_locale}"
"Dry running: {program_name} {arguments}":
  en: "Dry running: %{program_name} %{arguments}"
"in {directory}":
  en: "in %{directory}"
"Rebooting...":
  en: "Rebooting..."
"Plugins upgraded":
  en: "Plugins upgraded"
"Would self-update":
  en: "Would self-update"
"Pulling":
  en: "Pulling"
"No Breaking changes":
  en: "No Breaking changes"
"Dropping you to shell. Fix what you need and then exit the shell.":
  en: "Dropping you to shell. Fix what you need and then exit the shell."
"Topgrade launched in a new tmux session":
  en: "Topgrade launched in a new tmux session"
#TODO: See if the \n breaks anything
"Topgrade upgraded to {version}:\n":
  en: "Topgrade upgraded to %{version}:\n"
"Topgrade is up-to-date":
  en: "Topgrade is up-to-date"
"Updating modules...":
  en: "Updating modules..."
"Powershell Modules Update":
  en: "Powershell Modules Update"
"Powershell is not installed":
  en: "Powershell is not installed"
"Error detecting current distribution: {error}":
  en: "Error detecting current distribution: %{error}"
"Error: {error}":
  en: "Error: %{error}"
"Failed":
  en: "Failed"
"pulling":
  en: "pulling"
"Changed":
  en: "Changed"
"Up-to-date":
  en: "Up-to-date"
"Self update":
  en: "Self update"
  
# The following 2 strings are used in the same sentence
"Only":
  en: "Only"
"updated repositories will be shown...":
  en: "updated repositories will be shown..."
  
"because it has no remotes":
  en: "because it has no remotes"
"Skipping":
  en: "Skipping"
"Aura(<0.4.6) requires sudo installed to work with AUR packages":
  en: "Aura(<0.4.6) requires sudo installed to work with AUR packages"
"Pacman backup configuration files found:":
  en: "Pacman backup configuration files found:"
"The package audit was successful, but vulnerable packages still remain on the system":
  en: "The package audit was successful, but vulnerable packages still remain on the system"
"Syncing portage":
  en: "Syncing portage"
"Finding available software":
  en: "Finding available software"
"A system update is available. Do you wish to install it?":
  en: "A system update is available. Do you wish to install it?"
"No new software available.":
  en: "No new software available."
"No Xcode releases installed.":
  en: "No Xcode releases installed."
"Would you like to move the former Xcode release to the trash?":
  en: "Would you like to move the former Xcode release to the trash?"
"New Xcode release detected:":
  en: "New Xcode release detected:"
"Would you like to install it?":
  en: "Would you like to install it?"
"No global packages installed":
  en: "No global packages installed"
"Remote Topgrade launched in Tmux":
  en: "Remote Topgrade launched in Tmux"
"Remote Topgrade launched in an external terminal":
  en: "Remote Topgrade launched in an external terminal"
"Collecting Vagrant boxes":
  en: "Collecting Vagrant boxes"
"No Vagrant directories were specified in the configuration file":
  en: "No Vagrant directories were specified in the configuration file"
"Vagrant boxes":
  en: "Vagrant boxes"
"No outdated boxes":
  en: "No outdated boxes"
"Summary":
  en: "Summary"
"Topgrade finished with errors":
  en: "Topgrade finished with errors"
"Topgrade finished successfully":
  en: "Topgrade finished successfully"
"Topgrade {version_str} Breaking Changes":
  en: "Topgrade %{version_str} Breaking Changes"
"Path {path} expanded to {expanded}":
  en: "Path %{path} expanded to %{expanded}"
"Path {path} doesn't exist":
  en: "Path %{path} doesn't exist"
"Cannot find {binary_name} in PATH":
  en: "Cannot find %{binary_name} in PATH"
"Failed to get a UTF-8 encoded hostname":
  en: "Failed to get a UTF-8 encoded hostname"
"Failed to get hostname: {err}":
  en: "Failed to get hostname: %{err}"
"{python} is a Python 2, skip.":
  en: "%{python} is a Python 2, skip."
"{python} is a Python shim, skip.":
  en: "%{python} is a Python shim, skip."
"{key} failed:":
  en: "%{key} failed:"
"{step_name} failed":
  en: "%{step_name} failed"
"DragonFly BSD Packages":
  en: "DragonFly BSD Packages"
"DragonFly BSD Audit":
  en: "DragonFly BSD Audit"
"FreeBSD Update":
  en: "FreeBSD Update"
"FreeBSD Packages":
  en: "FreeBSD Packages"
"FreeBSD Audit":
  en: "FreeBSD Audit"
"System update":
  en: "System update"
"needrestart will be ran by the package manager":
  en: "needrestart will be ran by the package manager"
"Check for needed restarts":
  en: "Check for needed restarts"
"Should not run in WSL":
  en: "Should not run in WSL"
"Firmware upgrades":
  en: "Firmware upgrades"
"Flatpak System Packages":
  en: "Flatpak System Packages"
"Snapd socket does not exist":
  en: "Snapd socket does not exist"
"You need to specify at least one container":
  en: "You need to specify at least one container"
"Skipped in --yes":
  en: "Skipped in --yes"
"Configuration update":
  en: "Configuration update"
"Going to execute `waydroid upgrade`, which would STOP the running container, is this ok?":
  en: "Going to execute `waydroid upgrade`, which would STOP the running container, is this ok?"
"Skip the Waydroid step because the user don't want to proceed":
  en: "Skip the Waydroid step because the user don't want to proceed"
"macOS App Store":
  en: "macOS App Store"
"macOS system update":
  en: "macOS system update"
"OpenBSD Update":
  en: "OpenBSD Update"
"OpenBSD Packages":
  en: "OpenBSD Packages"
"`fisher` is not defined in `fish`":
  en: "`fisher` is not defined in `fish`"
"`fish_plugins` path doesn't exist: {err}":
  en: "`fish_plugins` path doesn't exist: %{err}"
"`fish_update_completions` is not available":
  en: "`fish_update_completions` is not available"
"Desktop doest not appear to be gnome":
  en: "Desktop doest not appear to be gnome"
"Gnome shell extensions are unregistered in DBus":
  en: "Gnome shell extensions are unregistered in DBus"
"Gnome Shell extensions":
  en: "Gnome Shell extensions"
"Not a custom brew for macOS":
  en: "Not a custom brew for macOS"
"Guix Pull Failed, Skipping":
  en: "Guix Pull Failed, Skipping"
"Nix-darwin on macOS must be upgraded via darwin-rebuild switch":
  en: "Nix-darwin on macOS must be upgraded via darwin-rebuild switch"
"`nix upgrade-nix` can only be used on macOS or non-NixOS Linux":
  en: "`nix upgrade-nix` can only be used on macOS or non-NixOS Linux"
"`nix upgrade-nix` cannot be run when Nix is installed in a profile":
  en: "`nix upgrade-nix` cannot be run when Nix is installed in a profile"
"Nix (self-upgrade)":
  en: "Nix (self-upgrade)"
"Pyenv is installed, but $PYENV_ROOT is not set correctly":
  en: "Pyenv is installed, but $PYENV_ROOT is not set correctly"
"pyenv is not a git repository":
  en: "pyenv is not a git repository"
"Bun Packages":
  en: "Bun Packages"
"WSL not installed":
  en: "WSL not installed"
"Update WSL":
  en: "Update WSL"
"Could not find Topgrade installed in WSL":
  en: "Could not find Topgrade installed in WSL"
"Consider installing PSWindowsUpdate as the use of Windows Update via USOClient is not supported.":
  en: "Consider installing PSWindowsUpdate as the use of Windows Update via USOClient is not supported."
"USOClient not supported.":
  en: "USOClient not supported."
"Connecting to {hostname}...":
  en: "Connecting to %{hostname}..."
"Skipping powered off box {vagrant_box}":
  en: "Skipping powered off box %{vagrant_box}"
"`{repo_tag}` for `{platform}`":
  en: "`%{repo_tag}` for `%{platform}`"
"Containers":
  en: "Containers"
"Emacs directory does not exist":
  en: "Emacs directory does not exist"
"Error getting the composer directory: {error}":
  en: "Error getting the composer directory: %{error}"
"Composer directory {composer_home} isn't a descendant of the user's home directory":
  en: "Composer directory %{composer_home} isn't a descendant of the user's home directory"
"Composer":
  en: "Composer"
"Error running `dotnet tool list`. This is expected when a dotnet runtime is installed but no SDK.":
  en: "Error running `dotnet tool list`. This is expected when a dotnet runtime is installed but no SDK."
"No dotnet global tools installed":
  en: "No dotnet global tools installed"
"Racket Package Manager":
  en: "Racket Package Manager"
"GH failed":
  en: "GH failed"
"GitHub CLI Extensions":
  en: "GitHub CLI Extensions"
"Julia Packages":
  en: "Julia Packages"
"Update ClamAV Database(FreshClam)":
  en: "Update ClamAV Database(FreshClam)"
"Path {pattern} did not contain any git repositories":
  en: "Path %{pattern} did not contain any git repositories"
"No repositories to pull":
  en: "No repositories to pull"
"Git repositories":
  en: "Git repositories"
"Would pull {repo}":
  en: "Would pull %{repo}"
"Node Package Manager":
  en: "Node Package Manager"
"Performant Node Package Manager":
  en: "Performant Node Package Manager"
"Yarn Package Manager":
  en: "Yarn Package Manager"
"Deno installed outside of .deno directory":
  en: "Deno installed outside of .deno directory"
"The Ultimate vimrc":
  en: "The Ultimate vimrc"
"vim binary might be actually nvim":
  en: "vim binary might be actually nvim"
"`{process}` failed: {exit_satus}":
  en: "`%{process}` failed: %{exit_satus}"
"`{process}` failed: {exit_satus} with {output}":
  en: "`%{process}` failed: %{exit_satus} with %{output}"
"Unknown Linux Distribution":
  en: "Unknown Linux Distribution"
'File "/etc/os-release" does not exist or is empty':
  en: 'File "/etc/os-release" does not exist or is empty'
"Failed getting the system package manager":
  en: "Failed getting the system package manager"
"A step failed":
  en: "A step failed"
"Dry running":
  en: "Dry running"
"Topgrade Upgraded":
  en: "Topgrade Upgraded"
"OK":
  en: "OK"
"FAILED":
  en: "FAILED"
"IGNORED":
  en: "IGNORED"
"SKIPPED":
  en: "SKIPPED"
  
# 'Y' and 'N' have to stay the same characters. Eg for German the translation 
# would look sth like "(Y) Ja / (N) Nein"
"(Y)es/(N)o":
  en: "(Y)es/(N)o"
# 'y', 'N', 's', 'q' have to stay the same throughout all translations. 
# Eg German would look like "(y) Wiederholen / (N) Nein / (s) Konsole / (q) Beenden"
"Retry? (y)es/(N)o/(s)hell/(q)uit":
  en: "Retry? (y)es/(N)o/(s)hell/(q)uit"
# 'R', 'S', 'Q'  have to stay the same throughout all translations. Eg German would look like "\n(R) Neustarten\n(S) Konsole\n(Q) Beenden"
"\n(R)eboot\n(S)hell\n(Q)uit":
  en: "\n(R)eboot\n(S)hell\n(Q)uit"
"Require sudo or counterpart but not found, skip":
  en: "Require sudo or counterpart but not found, skip"
"sudo as user '{user}'":
  en: "sudo as user '%{user}'"
"Updating aqua ...":
  en: "Updating aqua ..."
"Updating aqua installed cli tools ...":
  en: "Updating aqua installed cli tools ..."
"Updating Volta packages...":
  en: "Updating Volta packages..."
"No packages installed with Volta":
  en: "No packages installed with Volta"
"pyenv-update plugin is not installed":
  en: "pyenv-update plugin is not installed"
  